name: Build and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-linux
          - aarch64-linux
          - x86_64-macos
          - aarch64-macos
          - x86_64-windows
          - aarch64-windows
        optimize: [ReleaseSmall]

    steps:
      - uses: actions/checkout@v5
      - uses: mlugg/setup-zig@v2

      - name: Build
        run: zig build -Doptimize=${{ matrix.optimize }} -Dtarget=${{ matrix.target }}

      - name: Verify Windows binary
        if: contains(matrix.target, 'windows')
        run: |
          ls -la zig-out/bin
          file zig-out/bin/cm.exe || true

      # Package: Unix -> .tar.gz
      - name: Package (Unix)
        if: ${{ !contains(matrix.target, 'windows') }}
        run: |
          mkdir -p artifacts dist
          cp zig-out/bin/cm dist/cm
          cp LICENSE dist/
          tar -C dist -czf artifacts/cm-${{ matrix.target }}.tar.gz cm LICENSE
          ls -la artifacts

      # Package: Windows -> .zip
      - name: Package (Windows)
        if: contains(matrix.target, 'windows')
        run: |
          mkdir -p artifacts dist
          cp zig-out/bin/cm.exe dist/
          cp LICENSE dist/
          zip -j artifacts/cm-${{ matrix.target }}.zip dist/cm.exe dist/LICENSE
          ls -la artifacts

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cm-${{ matrix.target }}
          path: artifacts/*

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: mlugg/setup-zig@v2
      - run: zig build test

  release:
    needs: [build, test]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Prepare release assets
        run: |
          mkdir -p release/
          find artifacts/ -type f \( -name "*.tar.gz" -o -name "*.zip" \) -exec cp {} release/ \;
          ls -la release/

      - name: Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: release/*
          generate_release_notes: true
          draft: false
