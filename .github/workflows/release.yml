name: Release

on:
  push:
    tags:
      - "v*" # Trigger on tags like v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-linux-gnu # Use full target triples for Zig
          - aarch64-linux-gnu
          - x86_64-macos-none
          - aarch64-macos-none

    steps:
      - uses: actions/checkout@v4
      - uses: mlugg/setup-zig@v2 # Or your preferred zig setup action

      - name: Build binary
        # Use full target triples for better compatibility
        run: zig build -Doptimize=ReleaseSmall -Dtarget=${{ matrix.target }}

      - name: Prepare artifact for ${{ matrix.target }}
        run: |
          set -x
          # The binary name is 'cm' as defined in your build.zig
          ARTIFACT_DIR="cumul-${{ matrix.target }}"
          mkdir -p "artifacts/$ARTIFACT_DIR"

          # Copy binary and LICENSE into a staging directory
          cp zig-out/bin/cm "artifacts/$ARTIFACT_DIR/"
          cp LICENSE "artifacts/$ARTIFACT_DIR/"

          # Create the tarball
          tar -czf "artifacts/cumul-${{ matrix.target }}.tar.gz" -C "artifacts/$ARTIFACT_DIR" .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: artifacts/*.tar.gz

  # Your 'test' job from ci.yml can be merged here if you want it to block releases
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: mlugg/setup-zig@v2
      - run: zig build test
      - run: zig fmt --check src/

  # This job will create the final GitHub Release
  release:
    needs: [build, test]
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to create a release
    steps:
      - name: Download all release assets
        uses: actions/download-artifact@v4
        with:
          name: release-assets
          path: release-assets/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          # Use the RELEASE-NOTES.md file that is in your repo
          body_path: RELEASE-NOTES.md
          files: release-assets/*.tar.gz
